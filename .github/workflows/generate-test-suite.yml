name: Generate Test Suite and Postman Collection

on:
  # Runs on pushes to main and develop branches
  push:
    branches: 
      - main
      - develop
      - fix-missing-snapshots
    paths:
      - 'scripts/generate_test_resources.py'
      - 'scripts/generate_postman_collection.py'
      - 'input/fsh/profiles/**'
      - '.github/workflows/generate-test-suite.yml'
  
  # Allows manual trigger from Actions tab
  workflow_dispatch:
    inputs:
      request_delay:
        description: 'Delay in milliseconds between Postman requests'
        required: false
        type: number
        default: 500
      include_auth:
        description: 'Include Bearer token authentication'
        required: false
        type: boolean
        default: false
      run_validation:
        description: 'Run validation tests with Newman'
        required: false
        type: boolean
        default: true
      fhir_server_url:
        description: 'Override FHIR server URL for validation (optional)'
        required: false
        type: string
        default: ''
      skip_generation:
        description: 'Skip generation and only run validation'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  checks: write
  pull-requests: write
  
jobs:
  generate-test-suite:
    name: Generate Koppeltaal 2.0 Test Suite
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.skip_generation != 'true' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Add any required Python packages here if needed
          
      - name: Generate test resources
        run: |
          echo "🧪 Generating Koppeltaal 2.0 test resources..."
          python scripts/generate_test_resources.py
          
      - name: List generated test resources
        run: |
          echo "📁 Generated test resources:"
          find test-resources -name "*.json" -type f | sort
          echo ""
          echo "Total test resources: $(find test-resources -name "*.json" -type f | wc -l)"
          
      - name: Generate Postman collection
        run: |
          echo "📮 Generating Postman collection..."
          DELAY="${{ github.event.inputs.request_delay || 500 }}"
          AUTH_FLAG=""
          if [ "${{ github.event.inputs.include_auth }}" = "true" ]; then
            AUTH_FLAG="--include-auth"
          fi
          python scripts/generate_postman_collection.py --delay "$DELAY" $AUTH_FLAG
          
      - name: Display collection info
        run: |
          echo "📊 Collection statistics:"
          echo "- Total requests: $(jq '.item | map(.item[].name) | length' koppeltaal-tests.postman_collection.json)"
          echo "- Resource types: $(jq '.item[].name' koppeltaal-tests.postman_collection.json | tr '\n' ', ' | sed 's/,$//')"
          echo "- Request delay: ${{ github.event.inputs.request_delay || 500 }}ms"
          echo "- Auth included: ${{ github.event.inputs.include_auth || false }}"
          
      - name: Upload test resources as artifact
        uses: actions/upload-artifact@v4
        with:
          name: koppeltaal-test-resources
          path: test-resources/
          retention-days: 30
          
      - name: Upload Postman collection as artifact
        uses: actions/upload-artifact@v4
        with:
          name: postman-collection
          path: |
            koppeltaal-tests.postman_collection.json
            run-newman-tests.sh
          retention-days: 30
          
      - name: Create release assets (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Create a zip of test resources
          zip -r koppeltaal-test-resources.zip test-resources/
          
          # Create a bundle with Postman collection and Newman script
          zip postman-test-suite.zip koppeltaal-tests.postman_collection.json run-newman-tests.sh
          
      - name: Upload release assets (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            koppeltaal-test-resources.zip
            postman-test-suite.zip
            koppeltaal-tests.postman_collection.json
            run-newman-tests.sh
          
  validate-test-suite:
    name: Validate Test Suite with Newman
    runs-on: ubuntu-latest
    needs: [generate-test-suite]
    if: |
      always() && 
      (needs.generate-test-suite.result == 'success' || needs.generate-test-suite.result == 'skipped') &&
      github.event.inputs.run_validation != 'false'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python (if generation was skipped)
        if: needs.generate-test-suite.result == 'skipped'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Generate resources locally (if generation was skipped)
        if: needs.generate-test-suite.result == 'skipped'
        run: |
          echo "🧪 Generating test resources locally..."
          python scripts/generate_test_resources.py
          
          echo "📮 Generating Postman collection..."
          DELAY="${{ github.event.inputs.request_delay || 500 }}"
          AUTH_FLAG=""
          if [ "${{ github.event.inputs.include_auth }}" = "true" ]; then
            AUTH_FLAG="--include-auth"
          fi
          python scripts/generate_postman_collection.py --delay "$DELAY" $AUTH_FLAG
          
      - name: Download Postman collection artifact (if available)
        if: needs.generate-test-suite.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: postman-collection
          
      - name: Download test resources artifact (if available)
        if: needs.generate-test-suite.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: koppeltaal-test-resources
          path: test-resources/
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install Newman
        run: npm install -g newman
        
      - name: Validate Postman collection structure
        run: |
          echo "✅ Validating Postman collection structure..."
          # Check if collection is valid JSON
          jq empty koppeltaal-tests.postman_collection.json
          
          # Check collection has required structure
          jq -e '.info.name' koppeltaal-tests.postman_collection.json > /dev/null
          jq -e '.item | length > 0' koppeltaal-tests.postman_collection.json > /dev/null
          
          echo "Collection validation passed!"
          
      - name: Check if FHIR server is configured
        id: check-server
        env:
          FHIR_SERVER_OVERRIDE: ${{ github.event.inputs.fhir_server_url }}
          FHIR_SERVER_SECRET: ${{ secrets.TEST_FHIR_SERVER_URL }}
        run: |
          # Use override URL if provided, otherwise use secret
          if [ -n "$FHIR_SERVER_OVERRIDE" ]; then
            echo "server_url=$FHIR_SERVER_OVERRIDE" >> $GITHUB_OUTPUT
            echo "has_server=true" >> $GITHUB_OUTPUT
            echo "✅ Using override FHIR server: $FHIR_SERVER_OVERRIDE"
          elif [ -n "$FHIR_SERVER_SECRET" ]; then
            echo "server_url=$FHIR_SERVER_SECRET" >> $GITHUB_OUTPUT
            echo "has_server=true" >> $GITHUB_OUTPUT
            echo "✅ Using secret FHIR server"
          else
            echo "has_server=false" >> $GITHUB_OUTPUT
            echo "⚠️ No FHIR server configured - skipping Newman tests"
          fi
          
      - name: Run Newman tests (if server configured)
        if: steps.check-server.outputs.has_server == 'true'
        continue-on-error: true
        run: |
          echo "🧪 Running Newman tests..."
          newman run koppeltaal-tests.postman_collection.json \
            --env-var "fhir_base_url=${{ steps.check-server.outputs.server_url }}" \
            --reporters cli,json \
            --reporter-json-export newman-results.json \
            --bail
          
      - name: Create summary
        run: |
          echo "## 📋 Test Suite Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Test Resources" >> $GITHUB_STEP_SUMMARY
          echo "- Total resources: $(find test-resources -name "*.json" -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- Resource types: $(ls -d test-resources/*/ | xargs -n1 basename | tr '\n' ', ' | sed 's/,$//')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📮 Postman Collection" >> $GITHUB_STEP_SUMMARY
          echo "- Collection name: $(jq -r '.info.name' koppeltaal-tests.postman_collection.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Total requests: $(jq '.item | map(.item[].name) | length' koppeltaal-tests.postman_collection.json)" >> $GITHUB_STEP_SUMMARY
          echo "- Request delay: ${{ github.event.inputs.request_delay || 500 }}ms" >> $GITHUB_STEP_SUMMARY
          echo "- Authentication: ${{ github.event.inputs.include_auth || false }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add test results if Newman ran
          if [ -f newman-results.json ]; then
            echo "### 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
            if [ -n "${{ github.event.inputs.fhir_server_url }}" ]; then
              echo "**Server:** ${{ github.event.inputs.fhir_server_url }} (override)" >> $GITHUB_STEP_SUMMARY
            else
              echo "**Server:** Configured via secret" >> $GITHUB_STEP_SUMMARY
            fi
            TOTAL=$(jq '.run.stats.assertions.total' newman-results.json)
            FAILED=$(jq '.run.stats.assertions.failed' newman-results.json)
            if [ "$FAILED" -eq 0 ]; then
              echo "✅ All $TOTAL tests passed!" >> $GITHUB_STEP_SUMMARY
            else
              echo "⚠️ $FAILED out of $TOTAL tests failed" >> $GITHUB_STEP_SUMMARY
            fi
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "### 📥 Downloads" >> $GITHUB_STEP_SUMMARY
          echo "- [Postman Collection](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Test Resources](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY