name: Build (and Deploy) FHIR packages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main", "autobuild"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  id-token: write
  contents: write
  packages: write
  pages: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "publish"
  cancel-in-progress: false


jobs:
  build:
    permissions: write-all
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Build and push to local registry
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: localhost:5000/gidsopenstandaarden/fhir-builder:latest
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        env:
          FHIR_PASSWORD: ${{ secrets.FHIR_PASSWORD }}
          FHIR_EMAIL: ${{ secrets.FHIR_EMAIL }}
        run: |
          mkdir -p ./output
          docker run -v ${PWD}:/src -e FHIR_PASSWORD=${FHIR_PASSWORD} -e FHIR_EMAIL=${FHIR_EMAIL}  localhost:5000/gidsopenstandaarden/fhir-builder:latest
      - name: version
        run: cat package.json | jq .version | cut -d '"' -f2
        id: version
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: upload FHIR package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./packages/koppeltaalv2.00.${{ steps.version.outputs.version }}.tgz
          asset_name: koppeltaalv2.00.0.14.0.tgz
          asset_content_type: application/gzip
